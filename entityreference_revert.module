<?php

/**
 * @file
 * Entity reference revert module file. 
 */

// -----------------------------------------------------------------------------
// Property info

/**
 * Implements hook_entity_property_info().
 *
 * Add [field_entityreference]_revert to the referenced bundle.
 */
function entityreference_revert_entity_property_info() {
  $info = array();
  $fields_info = field_info_fields();
  foreach ($fields_info as $field => $field_info) {
    if ($field_info['type'] == 'entityreference') {
      $entity_type_referenced = $field_info['settings']['target_type'];
      // Just add a property that with the original field name and '_revert' prefix.
      $info[$entity_type_referenced]['properties']['revert_' . $field] = array(
        'label' => t('Revert of @field', array('@field' => $field)),
        'descriptoin' => t('Reverted relationship of @field.', array('@field' => $field)),
        'type' => 'struct',
        'computed' => TRUE,
        'getter callback' => 'entityreference_revert_entity_property_getter_callback',
        'property info' => entityreference_revert_struct_entity_property_info($field_info),
      );
    }
  }

  return $info;
}

/**
 * 'getter callback' for property in EntityMetadataWrapper.
 */
function entityreference_revert_entity_property_getter_callback($data, array $options, $name, $type, $info) {
  list($id, $vid, $bundle) = entity_extract_ids($type, $data);
  $field = substr($name, 7);
  $entities = entityreference_revert_get_entities($field, $id, $info['langcode']);

  return $entities;
}

/**
 * Generate the struct info.
 */
function entityreference_revert_struct_entity_property_info($field_info) {
  $entity_types = array_keys($field_info['bundles']);
  $info = array();
  foreach ($entity_types as $entity_type) {
    $info[$entity_type] = array(
    	'label' => t('Entity: @entity_type', array('@entity_type' => $entity_type)),
      'description' => t('Entity in reverted relationship of entityreference.'),
      'type' => 'list<' . $entity_type . '>',
    );
  }

  return $info;
}

// -----------------------------------------------------------------------------
// Utility

/**
 * Utility function to get the entities array.
 */
function entityreference_revert_get_entities($field, $entity_id, $langcode) {
  $result = KtoolsEntityField::entityreferenceRevertEntities($field, $entity_id, NULL, $langcode);

  return $result;
}
